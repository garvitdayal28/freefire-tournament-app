import { create } from "zustand";

// Mock data for matches
const mockMatches = [
  {
    matchId: "m001",
    type: "Solo",
    totalSpots: 100,
    spotsLeft: 45,
    map: "Bermuda",
    version: "OB35",
    prizePool: 5000,
    prizePerKill: 100,
    entryFee: 50,
    players: null,
    startTime: "Today, 7:00 PM",
    roomId: "12345",
    status: "Upcoming"
  },
  {
    matchId: "m007",
    type: "Solo",
    totalSpots: 100,
    spotsLeft: 32,
    map: "Bermuda",
    version: "OB35",
    prizePool: 7500,
    prizePerKill: 150,
    entryFee: 75,
    players: null,
    startTime: "Live Now",
    roomId: "78901",
    status: "Ongoing"
  },
  {
    matchId: "m008",
    type: "Squad",
    totalSpots: 25,
    spotsLeft: 8,
    map: "Kalahari",
    version: "OB35",
    prizePool: 15000,
    prizePerKill: 250,
    entryFee: 150,
    players: null,
    startTime: "Live Now",
    roomId: "89012",
    status: "Ongoing"
  },
  {
    matchId: "m002",
    type: "Duo",
    totalSpots: 50,
    spotsLeft: 12,
    map: "Kalahari",
    version: "OB35",
    prizePool: 10000,
    prizePerKill: 200,
    entryFee: 100,
    players: null,
    startTime: "Today, 9:00 PM",
    roomId: "23456",
    status: "Registration"
  },
  {
    matchId: "m003",
    type: "Squad",
    totalSpots: 25,
    spotsLeft: 5,
    map: "Purgatory",
    version: "OB35",
    prizePool: 20000,
    prizePerKill: 300,
    entryFee: 200,
    players: null,
    startTime: "Tomorrow, 6:00 PM",
    roomId: "34567",
    status: "Registration"
  },
  {
    matchId: "m004",
    type: "CS Ranked",
    totalSpots: 12,
    spotsLeft: 2,
    map: "Alpine",
    version: "OB35",
    prizePool: 15000,
    prizePerKill: 0,
    entryFee: 150,
    players: null,
    startTime: "Tomorrow, 8:00 PM",
    roomId: "45678",
    status: "Almost Full"
  },
  {
    matchId: "m005",
    type: "Solo",
    totalSpots: 100,
    spotsLeft: 0,
    map: "Bermuda",
    version: "OB35",
    prizePool: 5000,
    prizePerKill: 100,
    entryFee: 50,
    players: [
      { rank: 1, name: "SHADOW_KILLER", kills: 8, prize: 1800 },
      { rank: 2, name: "NinjaWarrior", kills: 5, prize: 1000 },
      { rank: 3, name: "HeadHunter99", kills: 6, prize: 800 },
      { rank: 4, name: "StealthAssassin", kills: 4, prize: 500 },
      { rank: 5, name: "ViperStrike", kills: 3, prize: 300 },
      { rank: 6, name: "PhantomSniper", kills: 2, prize: 200 },
      { rank: 7, name: "GhostRecon", kills: 1, prize: 100 },
      { rank: 8, name: "EliteShooter", kills: 1, prize: 100 },
      { rank: 9, name: "SilentScope", kills: 0, prize: 0 },
      { rank: 10, name: "RapidFire", kills: 0, prize: 0 }
    ],
    startTime: "Yesterday, 7:00 PM",
    roomId: "12345",
    status: "Completed"
  },
  {
    matchId: "m006",
    type: "Squad",
    totalSpots: 25,
    spotsLeft: 0,
    map: "Kalahari",
    version: "OB35",
    prizePool: 20000,
    prizePerKill: 300,
    entryFee: 200,
    players: [
      { rank: 1, name: "Team Alpha", kills: 15, prize: 8000 },
      { rank: 2, name: "Team Phoenix", kills: 12, prize: 5000 },
      { rank: 3, name: "Team Omega", kills: 9, prize: 3000 },
      { rank: 4, name: "Team Viper", kills: 7, prize: 2000 },
      { rank: 5, name: "Team Shadow", kills: 5, prize: 1000 },
      { rank: 6, name: "Team Recon", kills: 3, prize: 600 },
      { rank: 7, name: "Team Stealth", kills: 2, prize: 400 },
      { rank: 8, name: "Team Phantom", kills: 0, prize: 0 }
    ],
    startTime: "Yesterday, 9:00 PM",
    roomId: "67890",
    status: "Completed"
  }
];

export const useMatches = create((set) => ({
  matches: mockMatches,
  type: '',
  totalSpots: 0,
  spotsLeft: 0,
  map: '',
  version: '',
  prizePool: 0,
  prizePerKill: 0,
  entryFee: 0,
  players: null,
  startTime: '',
  matchId: '',
  roomId: '',
  status: '',

  setMatches: (matches) => set({ matches }),
  setMatchDetails: ({
    type,
    totalSpots,
    spotsLeft,
    map,
    version,
    prizePool,
    prizePerKill,
    entryFee,
    players,
    startTime,
    matchId,
    roomId,
    status
  }) => set({
    type,
    totalSpots,
    spotsLeft,
    map,
    version,
    prizePool,
    prizePerKill,
    entryFee,
    players,
    startTime,
    matchId,
    roomId,
    status
  }),
  updateMatchSpots: (spotsLeft) => set({ spotsLeft }),
  updateMatchStatus: (status) => set({ status }),
  addPlayer: (player) => set((state) => ({
    players: state.players ? [...state.players, player] : [player],
    spotsLeft: state.spotsLeft - 1
  })),
  resetMatch: () => set({
    type: '',
    totalSpots: 0,
    spotsLeft: 0,
    map: '',
    version: '',
    prizePool: 0,
    prizePerKill: 0,
    entryFee: 0,
    players: null,
    startTime: '',
    matchId: '',
    roomId: '',
    status: ''
  })
}));